---
import '../css/global.css';
import { invert } from '../util/invert';
import { paginationPrevNext } from '../util/paginationPrevNext';
import { getCollection, getEntryBySlug } from 'astro:content';

export const getStaticPaths = () => {
    const lessons = {
        'libertarian-ethics': [
            'the-nature-of-law',
            'the-nap',
            'homesteading-and-property-rights',
            'contract-theory',
            'childrens-rights',
            'defensive-force-and-proportionality',
            'law-subset',
        ],
    };

    let slugs = [];
    Object.values(lessons).forEach(i => i.forEach(j => slugs.push(j)));

    return slugs.map(i => ({
        params: { lesson: i },
        props: invert(lessons),
    }));
};

const { course } = Astro.params;
const courseTitles = {
    'libertarian-ethics': 'The Fundamentals of Libertarian Ethics',
};
const DATA = Astro.props;
const slugs = Object.keys(DATA);
const slug = Astro.url.href.split('/').pop();
const prevNext = paginationPrevNext(slugs, slug);

const courseLessons = await getCollection(DATA[slug]);

// astro confuses the <= with the beginning of a JSX fragment
let lessons = [];
for (let i = 1; i <= courseLessons.length; i++) {
    lessons.push(courseLessons.find(l => l.data.n == String(i)));
}

const pagination = {
    home: DATA[slug],
    all: lessons,
    n: slugs.findIndex(e => e === slug),
    prevNext: prevNext,
};

const lessonInfo = await getEntryBySlug(DATA[slug], slug);
const { Content, headings } = await lessonInfo.render();

import Layout from '../layouts/Layout.astro';
import {
    LessonPagination,
    Navbar,
    Footer,
    SkipToContent,
    TOC,
} from '../components';

import { Debug } from 'astro/components';
---

<script>
    // this does that thing on mises.org where it highlights the footnote you just clicked on
    const removeHighlights = () =>
        document
            .querySelectorAll('.fn-highlight')
            .forEach(el => el.classList.remove('fn-highlight'));

    const fnHighlight = fn => {
        // remove highlight from footnotes before highlighting, so that multiple dont get highlighted
        removeHighlights();

        // highlight the desired footnote
        document
            .getElementById(fn)
            .parentElement.parentElement.classList.add('fn-highlight');
    };

    /* do this if you only want it to trigger on footrefs, I want the highlights to disappear when I click other links though
    document.querySelectorAll('.footref').forEach(
    el =>
    (el.onclick = () => {
    console.log('fn.' + el.id.split('.')[1]);
    fnHighlight('fn.' + el.id.split('.')[1]);
    })
    );
  */

    Array.prototype.slice
        .call(document.getElementsByTagName('a'))
        .forEach(el => {
            if (el.id.split('.')[0] === 'fnr' && !isNaN(el.id.split('.')[1])) {
                el.onclick = () => fnHighlight('fn.' + el.id.split('.')[1]);

                // I also want the titles to reflect the footnote content
                el.title = document
                    .getElementById('fn.' + el.id.split('.')[1])
                    .parentElement.parentElement.innerText.substring(2);
            } else {
                el.onclick = removeHighlights;
            }
        });

    const location = window.location.href;

    // why so many ifs? funy.
    if (location.split('#').length == 2) {
        if (location.split('#')[1].split('.').length == 2) {
            if (
                location.split('#')[1].split('.')[0] == 'fn' &&
                !isNaN(location.split('#')[1].split('.')[1])
            ) {
                fnHighlight(location.split('#')[1]);
            }
        }
    }
</script>

<Layout
    title={lessonInfo.data.title + ' | ' + courseTitles[DATA[slug]]}
    description={lessonInfo.data.description}
    ptype="article"
    published={lessonInfo.data.date}
    MJ={true}>
    <SkipToContent href="#md-content" />
    <Navbar path={`courses/${DATA[slug]}/${slug}`} />
    <div
        class="absolute h-[100vh] w-[100vw] blur-sm brightness-[0.25] saturate-[0.7]"
        style=`background-image: url(/thumb-${slug}.png); background-repeat: no-repeat; background-size: cover;`>
    </div>
    <div class="hero min-h-screen bg-transparent">
        <div class="hero-overlay bg-opacity-60"></div>
        <div class="hero-content text-center text-neutral-content">
            <div class="max-w-2xl">
                <h1 class="mb-7 text-5xl font-bold">
                    {lessonInfo.data.title}
                </h1>
                <p class="mb-5 text-xl">{lessonInfo.data.description}</p>
            </div>
        </div>
    </div>
    <div
        class="w-[100vw] place-items-center grid animate-bounce text-7xl top-[90vh] absolute">
        <a href="#md-content">ðŸ‘‡</a>
    </div>
    <main id="md-content" class="w-[100vw] bg-zinc-900 flex flex-row">
        <TOC slug={slug} pagination={pagination} headings={headings} />
        <div
            class="min-[1132px]:hidden block fixed bottom-0 grid place-items-center w-[100vw]">
            <LessonPagination pagination={pagination} />
        </div>
        <article
            class="min-[1132px]:w-[80vw] w-[100vw] bg-zinc-800 text-justify md:p-16 p-6">
            <Content />
        </article>
    </main>
    <Footer noShadow={true} />
</Layout>

<!-- is:global required to apply styles to the rendered MD -->
<style is:global lang="scss">
    .fn-highlight {
        @apply bg-zinc-600 rounded-sm p-[0.5rem] m-[-0.5rem];
    }
    #md-content {
        h1 {
            @apply text-6xl font-bold text-center mt-24 mb-16;
        }

        h2 {
            @apply text-5xl font-bold text-center mt-20 mb-12;
        }

        h3 {
            @apply text-5xl font-semibold text-center mt-16 mb-10;
        }

        h4 {
            @apply text-4xl font-semibold text-center mt-8 mb-4;
        }

        p,
        ol {
            @apply my-4 text-justify text-lg min-[2000px]:text-2xl min-[2500px]:text-3xl;
        }

        blockquote {
            @apply border-l-4 border-zinc-700 pl-4;
        }

        img {
            margin: auto;
        }

        article {
            ol,
            ul {
                @apply ml-6;
            }

            ol {
                @apply list-decimal;
            }

            ul {
                @apply list-disc;
            }

            a {
                @apply text-sky-500;

                &:not(.footref) {
                    @apply hover:link;
                }
            }

            #footnotes ~ p {
                @apply text-left;
            }
        }
    }
</style>
