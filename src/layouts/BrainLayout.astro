---
import { ScrollUp } from '../components';
import { SEO } from 'astro-seo'; // https://github.com/jonasmerlin/astro-seo/tree/main

export interface Props {
    title?: string;
    description?: string;
    ptype?: 'article';
    published?: string;
    MJ: boolean;
}

const { title, description, ptype, published, MJ, slug } = Astro.props;

const META = {
    title: !!title ? title : 'LiquidZulu | Philosophy Distilled',
    slug: slug,
    description: !!description
        ? description
        : 'The home of philosophy without the fat.',
    type:
        ptype == 'article' && !!published
            ? `article:${published}`
            : 'article:LiquidZulu',
};
---

<html
    transition:animate="fade"
    class="scroll-smooth bg-slate-900 static overflow-x-hidden md:overflow-x-visible"
    lang="en">
    <head>
        <slot name="head" />
        <SEO
            charset="UTF-8"
            title={META.title}
            description={META.description}
            openGraph={{
                basic: {
                    title: META.title,
                    type: META.type,
                    image: `/images/thumb/${META.slug}.webp`,
                },
            }}
            twitter={{
                creator: '@liquid2ulu',
                card: 'summary_large_image',
                title: META.title,
                image: `/images/thumb/${META.slug}.webp`,
                description: META.description,
            }}
            extend={{
                link: [
                    { rel: 'icon', href: '/logo.svg', type: 'image/svg+xml' },
                ],
                meta: [
                    { name: 'viewport', content: 'width=device-width' },
                    { name: 'generator', content: Astro.generator },
                    { name: 'twitter:title', content: META.title },
                    { name: 'twitter:description', content: META.description },
                ],
            }}
        />

        {
            (() => {
                if (!!MJ) {
                    return (
                        <Fragment>
                            <script src="https://polyfill.io/v3/polyfill.min.js?features=es6" />
                            <script
                                id="MathJax-script"
                                async
                                src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"
                            />
                            <script>
                                {
                                    (MathJax = {
                                        tex: {
                                            inlineMath: [
                                                ['$', '$'],
                                                ['\\(', '\\)'],
                                            ],
                                        },
                                        svg: {
                                            fontCache: 'global',
                                        },
                                    })
                                }
                            </script>
                        </Fragment>
                    );
                }
            })()
        }
        <script src="https://cdn.jsdelivr.net/npm/fuse.js@6.6.2"></script>
    </head>
    <body class="bg-slate-900 -z-50 text-slate-50 w-screen relative">
        <slot />
        <ScrollUp />
    </body>
</html>
